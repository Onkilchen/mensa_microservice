openapi: 3.0.1
info:
  title: MensaService
  description:
    This is a server, that caches the meals of a mensa. It can fetch you
    the meals of a certain day and filter them after given criteria.
servers:
  - url: http://localhost:8000
tags:
  - name: meals
    description: All the meals of a specific day, filtered if you provide the information needed
    externalDocs:
      description: Find out more
      url: https://openmensa.org/
paths:
  /meals:
    post:
      tags:
        - meals
      summary: Returns JSON-Object containing the requested meals
      operationId: generateResponse
      requestBody:
        description: message object, containing the date, filters or a specific meal
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/message"
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/APIresponse"
                x-content-type: application/json
        "405":
          description: Invalid input
          content: {}
      x-codegen-request-body-name: body
      x-swagger-router-controller: Response
components:
  schemas:
    message:
      type: object
      properties:
        userID:
          type: integer
          format: int64
        message:
          type: string
          description: The initial message of the user
        evaluatedMessage:
          $ref: "#/components/schemas/message_evaluatedMessage"
    APIresponse:
      type: object
      properties:
        message:
          $ref: "#/components/schemas/APIresponse_message"
        answer:
          type: object
          properties:
            content:
              type: string
              description: a nicely formatted string, containing the requested meals
            history:
              type: string
              description: history for debugging purposes
      example:
        userID: 0,
        message: message
        evaluatedMessage:
          date: yyyy-mm-dd
          filter: ["filters"]
        answer:
          content: answerstring
          history: MensaService
    meals:
      type: array
      items:
        $ref: "#/components/schemas/meals_inner"
    meal:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          description: name of the meal
        category:
          type: string
          description: category of the meal
        prices:
          $ref: "#/components/schemas/meal_prices"
        notes:
          type: array
          description: Additional details about the meal
          items:
            type: string
      example:
        notes:
          - notes
          - notes
        name: name
        id: 0
        category: category
        prices:
          pupils: 5.962133916683182
          students: 6.027456183070403
          employees: 1.4658129805029452
          others: 5.637376656633329
    message_evaluatedMessage:
      type: object
      properties:
        date:
          type: string
          format: date-time
        filter:
          type: array
          description: filters for meals, seperated by commas
      description: the evaluated method of the NLU
      example:
        date: yyyy-mm-dd
        filter: ["filters"]
    APIresponse_message:
      type: object
      properties:
        userID:
          type: integer
          format: int64
        message:
          type: string
          description: The initial message of the user
        evaluatedMessage:
          $ref: "#/components/schemas/message_evaluatedMessage"
      example:
        evaluatedMessage:
          date: yyyy-mm-dd
          filter: ["filters"]
        message: message
        userID: 0
    meals_inner:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          description: name of the meal
        category:
          type: string
          description: category of the meal
        prices:
          type: object
          properties:
            students:
              type: number
            employees:
              type: number
            pupils:
              type: number
            others:
              type: number
          example:
            pupils: 5.962133916683182
            students: 6.027456183070403
            employees: 1.4658129805029452
            others: 5.637376656633329
        notes:
          type: array
          description: Additional details about the meal
          items:
            type: string
      example:
        notes:
          - notes
          - notes
        name: name
        id: 0
        category: category
        prices:
          pupils: 5.962133916683182
          students: 6.027456183070403
          employees: 1.4658129805029452
          others: 5.637376656633329
    meal_prices:
      type: object
      properties:
        students:
          type: number
        employees:
          type: number
        pupils:
          type: number
        others:
          type: number
      example:
        pupils: 5.962133916683182
        students: 6.027456183070403
        employees: 1.4658129805029452
        others: 5.637376656633329
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header
